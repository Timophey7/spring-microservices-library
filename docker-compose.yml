version: "3.7"

networks:
    app:
        driver: bridge

volumes:
    cache: {}
    db-mysql:
        driver: local

services:

    mysql-cart:
        image: mysql:8.0
        networks:
            - app
        environment:
            MYSQL_DATABASE: cart-service
            MYSQL_USER: user
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: password
        ports:
            - "3310:3310"
        volumes:
            - db-mysql:/var/lib/mysql

    mysql-security:
        image: mysql:8.0
        networks:
            - app
        environment:
            MYSQL_DATABASE: security-service
            MYSQL_USER: user
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: password
        ports:
            - "3309:3309"
        volumes:
            - db-mysql:/var/lib/mysql

    mysql-orders:
        image: mysql:8.0
        networks:
            - app
        environment:
            MYSQL_DATABASE: orders-service
            MYSQL_USER: user
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: password
        ports:
            - "3308:3308"
        volumes:
            - db-mysql:/var/lib/mysql

    mysql-library:
        image: mysql:8.0
        networks:
            - app
        environment:
            MYSQL_DATABASE: library
            MYSQL_USER: user
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: password
        ports:
            - "3307:3307"
        volumes:
            - db-mysql:/var/lib/mysql

    library:
        build:
            context: ./library
        networks:
            - app
        ports:
            - "8084:8084"
        environment:
            SPRING_PROFILES_ACTIVE: docker
        depends_on:
            - db
            - discovery-service
            - api-gateway



    discovery-service:
        build:
            context: ./discovery-service
        networks:
            - app
        ports:
            - "8761:8761"

    zookeeper:
        image: confluentinc/cp-zookeeper:7.4.4
        networks:
            - app
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - "22181:2181"

    kafka:
        image: confluentinc/cp-kafka:7.4.4
        networks:
            - app
        depends_on:
            - zookeeper
        ports:
            - "29092:29092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    api-gateway:
        build:
            context: ./api-gateway
        networks:
            - app
        ports:
            -   "8089:8089"
        depends_on:
            -   discovery-service

    redis:
        image: redis:7.2-rc-alpine
        networks:
            - app
        container_name: redis
        ports:
            -   "6379:6379"
        command: redis-server --save 20 1 --loglevel warning --requirepass ZmRlZWRhc3Nl
        volumes:
            - cache:/data
        restart: always